{"version":3,"sources":["User.tsx"],"names":["idetReqData","IdentificacaoRequerente","nameReq","setNameReq","emailReq","setEmailReq","mobileReq","setMobileReq","phoneReq","setPhoneReq","addressReq","setAddressReq","postalCodeReq","setPostalCodeReq","placeReq","setPlaceReq","console","log","idenReq","docTypeReq","checkedProprio","checkedEditor","namecheckedTitularreq","checkedRepre","styles","titleText","text","flexDirection","StyleSheet","create","baseText","fontFamily","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    StyleSheet,\n    View,\n    Text,\n    TextInput\n} from 'react-native';\n\n/* const listDocType = [\n    {\n        label: 'CNI',\n        value: 'CNI'\n    },\n    {\n        label: 'Passaporte',\n        value: 'Passaporte'\n    },\n]; */\n\n/* const listCountry = [\n    {\n        label: 'Angola',\n        value: 'Angola'\n    },\n    {\n        label: 'Moçambique',\n        value: 'Moçambique'\n    },\n    {\n        label: 'Holanda',\n        value: 'Holanda'\n    },\n    {\n        label: 'Cabo Verde',\n        value: 'Cabo Verde'\n    },\n]; */\nvar idetReqData = {};\n\nconst IdentificacaoRequerente = () => {\n\n    const [nameReq, setNameReq] = useState('');\n   // const [docTypeReq, setDocTypeReq] = useState('');\n    const [emailReq, setEmailReq] = useState('');\n    const [mobileReq, setMobileReq] = useState('');\n    const [phoneReq, setPhoneReq] = useState('');\n    const [addressReq, setAddressReq] = useState('');\n    const [postalCodeReq, setPostalCodeReq] = useState('');\n    const [placeReq, setPlaceReq] = useState('');\n   // const [countryReq, setCountryReq] = useState('');\n\n    /* const [checkedProprio, setCheckedProprio] = useState(false);\n    const [checkedEditor, setCheckedEditor] = useState(false);\n    const [checkedTitular, setCheckedTitular] = useState(false);\n    const [checkedRepre, setCheckedRepre] = useState(false); */\n\n\n    useEffect(() => {\n        console.log(' A editar');\n        const idenReq = {\n            nameReq: '',\n            docTypeReq: '',\n            emailReq: '',\n            mobileReq: '',\n            phoneReq: '',\n            addressReq: '',\n            postalCodeReq: '',\n            placeReq: '',\n            checkedProprio: '',\n            checkedEditor: '',\n            namecheckedTitularreq: '',\n            checkedRepre: ''\n        }\n\n        idenReq[\"nameReq\"] = nameReq;\n        //idenReq[\"docTypeReq\"] = docTypeReq;\n        idenReq[\"emailReq\"] = emailReq;\n        idenReq[\"mobileReq\"] = mobileReq;\n        idenReq[\"phoneReq\"] = phoneReq;\n        idenReq[\"addressReq\"] = addressReq;\n        idenReq[\"postalCodeReq\"] = postalCodeReq;\n        idenReq[\"placeReq\"] = placeReq;\n\n        // TODO: get value checked\n        /*  idenReq[\"checkedProprio\"] = checkedProprio;\n         idenReq[\"checkedEditor\"] = checkedEditor;\n         idenReq[\"namecheckedTitularreq\"] = checkedTitular;\n         idenReq[\"checkedRepre\"] = checkedRepre; */\n\n        console.log('idetReqData: ', idetReqData);\n    });\n    return (\n        <View>\n\n            <Text style={styles.titleText}>Nome do requerente</Text>\n            <TextInput\n                placeholder='Nome do requerente'\n                /* style={{ height: 40, borderColor: 'gray', borderWidth: 1 }} */\n                onChangeText={text => setNameReq(text)}\n            />\n\n\n            <Text>Tipo do documento de identificação</Text>\n\n            {/* <DropDownPicker\n                items={listDocType}\n                containerStyle={{ height: 40 }}\n                style={{ backgroundColor: '#fafafa' }}\n                itemStyle={{\n                    justifyContent: 'flex-start'\n                }}\n                dropDownStyle={{ backgroundColor: '#fafafa' }}\n                onChangeItem={item => setDocTypeReq(item.value)}\n            /> */}\n            <Text>E-mail</Text>\n            <TextInput\n                placeholder=\"E-mail\"\n                onChangeText={text => setEmailReq(text)}\n            />\n            <TextInput\n                placeholder=\"Telefone\"\n                onChangeText={text => setPhoneReq(text)}\n            />\n            <Text>Telemóvel</Text>\n            <TextInput\n                placeholder=\"Telemóvel\"\n                onChangeText={text => setMobileReq(text)}\n            />\n            <Text>Morada</Text>\n            <TextInput\n                placeholder=\"Morada\"\n                onChangeText={text => setAddressReq(text)}\n            />\n            <Text>Codigo Postal</Text>\n            <TextInput\n                placeholder=\"Codigo Postal\"\n                onChangeText={text => setPostalCodeReq(text)}\n            />\n            <Text> Localidade </Text>\n            <TextInput\n                placeholder=\"Localidade\"\n                onChangeText={text => setPlaceReq(text)}\n            />\n\n            <Text>Pais</Text>\n            {/* <DropDownPicker\n                items={listCountry}\n                containerStyle={{ height: 40 }}\n                style={{ backgroundColor: '#fafafa' }}\n                itemStyle={{\n                    justifyContent: 'flex-start'\n                }}\n                dropDownStyle={{ backgroundColor: '#fafafa' }}\n                onChangeItem={item => setCountryReq(item.value)}\n            /> */}\n            <View style={{ flexDirection: \"row\" }}>\n                {/* <CheckBox\n                    title=\"O Proprio\"\n                    checked={checkedProprio}\n                    onPress={() => {\n                        checkedProprio ? setCheckedProprio(false) : setCheckedProprio(true)\n                    }}\n                /> */}\n                {/* <CheckBox\n                    title=\"Editor\"\n                    checked={checkedEditor}\n                    onPress={() => {\n                        checkedEditor ? setCheckedEditor(false) : setCheckedEditor(true)\n                    }}\n                /> */}\n                {/* <CheckBox\n                    title=\"Representante\"\n                    checked={checkedRepre}\n                    onPress={() => {\n                        checkedRepre ? setCheckedRepre(false) : setCheckedRepre(true)\n                    }}\n                /> */}\n                {/* <CheckBox\n                    title=\"Titular Sucessivo\"\n                    checked={checkedTitular}\n                    onPress={() => {\n                        checkedTitular ? setCheckedTitular(false) : setCheckedTitular(true)\n                    }}\n                /> */}\n            </View>\n        </View>\n    );\n}\nconst styles = StyleSheet.create({\n    baseText: {\n        fontFamily: \"Cochin\"\n    },\n    titleText: {\n        fontSize: 20,\n        fontWeight: \"bold\"\n    }\n});\n\nexport default IdentificacaoRequerente;"]}