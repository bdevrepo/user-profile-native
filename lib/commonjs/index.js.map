{"version":3,"sources":["index.tsx"],"names":["list","id","appLogo","appUrl","style","ModalGridMenu","GridRow","modalVisible","setModalVisible","styles","container","item","gridRow","gridIcon","uri","avatar","Profile","iconWidth","StyleSheet","create","flex","justifyContent","backgroundColor","width","height","marginBottom","flexDirection","margin","borderRadius"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,IAAI,GAAG,CACT;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,OAAO,EAAE,iEAFb;AAGIC,EAAAA,MAAM,EAAE,iEAHZ;AAIIC,EAAAA,KAAK,EAAE;AAJX,CADS,CAAb;;AAUA,MAAMC,aAAa,GAAG,MAAM;AACxB,sBACI,6BAAC,iBAAD,qBACI,6BAAC,kBAAD;AACI,IAAA,OAAO,EAAE,IADb;AAEI,IAAA,aAAa,EAAC,OAFlB;AAGI,IAAA,WAAW,EAAE;AAHjB,kBAKI,6BAAC,qBAAD,OALJ,CADJ,CADJ;AAWH,CAZD;;AAaA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC,qBAAS,KAAT,CAAxC;AACA,sBACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,kBAEI,6BAAC,qBAAD;AACI,IAAA,IAAI,EAAEV,IADV;AAEI,IAAA,UAAU,EAAE,CAAC;AAAEW,MAAAA;AAAF,KAAD,kBACR,6BAAC,+BAAD;AACI,MAAA,aAAa,EAAE,GADnB;AAEI,MAAA,aAAa,EAAC,SAFlB;AAGI,MAAA,OAAO,EAAE,MAAM;AACXH,QAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH;AALL,oBAOI,6BAAC,iBAAD,qBACI,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACG;AAApB,oBACI,6BAAC,kBAAD;AACI,MAAA,KAAK,EAAEH,MAAM,CAACI,QADlB;AAEI,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEH,IAAI,CAACT;AAAZ;AAFZ,MADJ,CADJ,eAOI,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACG;AAApB,oBACI,6BAAC,kBAAD;AACI,MAAA,KAAK,EAAEH,MAAM,CAACM,MADlB;AAEI,MAAA,MAAM,EAAE;AAAED,QAAAA,GAAG,EAAEH,IAAI,CAACT;AAAZ;AAFZ,MADJ,CAPJ,CAPJ,CAHR;AA2BI,IAAA,UAAU,EAAE;AA3BhB,IAFJ,EA+BKK,YAAY,gBACT,6BAAC,aAAD,OADS,GAEP,IAjCV,CADJ;AAsCH,CAxCD;;AAyCA,MAAMS,OAAO,GAAG,MAAM;AAClB,sBACI,6BAAC,iBAAD,qBACI,6BAAC,OAAD,OADJ,CADJ;AAKH,CAND;;AAOA,MAAMC,SAAS,GAAG,EAAlB;;AACA,MAAMR,MAAM,GAAGS,wBAAWC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADkB;AAM7BT,EAAAA,QAAQ,EAAE;AACNU,IAAAA,KAAK,EAAEN,SADD;AAENO,IAAAA,MAAM,EAAEP,SAFF;AAGNQ,IAAAA,YAAY,EAAE;AAHR,GANmB;AAY7Bb,EAAAA,OAAO,EAAE;AACLQ,IAAAA,IAAI,EAAE,CADD;AAELM,IAAAA,aAAa,EAAE,QAFV;AAGLC,IAAAA,MAAM,EAAE;AAHH,GAZoB;AAiB7BZ,EAAAA,MAAM,EAAE;AACJQ,IAAAA,KAAK,EAAEN,SADH;AAEJO,IAAAA,MAAM,EAAEP,SAFJ;AAGJW,IAAAA,YAAY,EAAEX,SAAS,GAAG,CAHtB;AAIJQ,IAAAA,YAAY,EAAE;AAJV;AAjBqB,CAAlB,CAAf;;eAyBeT,O","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, TouchableHighlight, View, FlatList, Image, StyleSheet } from 'react-native';\nimport UserGridMenu from './UserGridMenu';\n\nconst list = [\n    {\n        id: 1,\n        appLogo: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n        appUrl: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n        style: \"styles.avatar\"\n    },\n\n];\n\nconst ModalGridMenu = () => {\n    return (\n        <View>\n            <Modal\n                visible={true}\n                animationType=\"slide\"\n                transparent={true}\n            >\n                <UserGridMenu />\n            </Modal>\n        </View>\n    );\n}\nconst GridRow = () => {\n    const [modalVisible, setModalVisible] = useState(false);\n    return (\n        <View style={styles.container}>\n\n            <FlatList\n                data={list}\n                renderItem={({ item }) => (\n                    <TouchableHighlight\n                        activeOpacity={0.6}\n                        underlayColor=\"#DDDDDD\"\n                        onPress={() => {\n                            setModalVisible(!modalVisible);\n                        }}\n                    >\n                        <View>\n                            <View style={styles.gridRow}>\n                                <Image\n                                    style={styles.gridIcon}\n                                    source={{ uri: item.appLogo }}\n                                />\n                            </View>\n                            <View style={styles.gridRow}>\n                                <Image\n                                    style={styles.avatar}\n                                    source={{ uri: item.appLogo }}\n                                />\n                            </View>\n                        </View>\n                    </TouchableHighlight>\n\n                )}\n                numColumns={2}\n            />\n            {modalVisible ?\n                <ModalGridMenu />\n                : null\n            }\n        </View>\n    );\n}\nconst Profile = () => {\n    return (\n        <View>\n            <GridRow />\n        </View>\n    )\n}\nconst iconWidth = 40;\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    gridIcon: {\n        width: iconWidth,\n        height: iconWidth,\n        marginBottom: 15\n    },\n\n    gridRow: {\n        flex: 1,\n        flexDirection: 'column',\n        margin: 20,\n    },\n    avatar: {\n        width: iconWidth,\n        height: iconWidth,\n        borderRadius: iconWidth / 2,\n        marginBottom: 15\n    },\n\n});\nexport default Profile"]}