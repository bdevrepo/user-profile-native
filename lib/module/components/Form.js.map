{"version":3,"sources":["Form.tsx"],"names":["React","StyleSheet","KeyboardAvoidingView","View","Text","Button","GlobalStyles","CUSTOMON","FloatLabelTextInput","Form","styles","container","viewButton","COLOR","text","separator","create","flex","justifyContent","alignItems","margin","labelInput","color","formInput","borderBottomWidth","marginLeft","borderColor","input","borderWidth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,oBAFF,EAGEC,IAHF,CAIE;AACA;AALF,EAMEC,IANF,CAOE;AAPF,EAQEC,MARF,QASO,cATP;AAUA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB;;AAEA;AACF;AACA;AACA;AACA;AACE;AACA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AAEE,sBACE,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAEC,MAAM,CAACC;AAAvD,kBACE,oBAAC,mBAAD;AACI,IAAA,WAAW,EAAE,eADjB;AAEI,IAAA,KAAK,EAAE,gBAFX,CAGG;AACA;;AAJH,IADF,eA+BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,YAAY,CAACM;AAA1B,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEL,QAAQ,CAACM,KADlB;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAE,MAAM,CAAG;AAHpB,IADF,CA/BF,eAsCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,wBAtCF,eAwCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,YAAY,CAACS;AAA1B,WAxCF,eAyCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,YAAY,CAACM;AAA1B,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEL,QAAQ,CAACM,KADlB;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAE,MAAM,CAAG;AAHpB,IADF,CAzCF,CADF;AAoDD,CA7ED,C,CAgFA;AACA;;;AAEA,MAAMH,MAAM,GAAGT,UAAU,CAACe,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACRM,IAAAA,IAAI,EAAE,CADE;AAET;AACAC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH,CAKT;;AALS,GADoB;AAQ/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,MAAM,EAAE;AADJ,GARyB;AAW/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAXmB;AAc/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EAAE,GADV;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE;AAHJ,GAdoB;AAmB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR;AAnBwB,CAAlB,CAAf;AAuBA,eAAenB,IAAf","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  KeyboardAvoidingView,\n  View,\n  //TouchableOpacity,\n  //TextInput,\n  Text,\n  //Dimensions,\n  Button\n} from 'react-native';\nimport GlobalStyles from './../assets/style/GlobalStyles';\nimport { CUSTOMON } from './../store/constants';\nimport FloatLabelTextInput from 'react-native-floating-label-text-input';\n\nconst Form = () => {\n  //const [birthday, setBirthday] = useState('');\n\n  /* const _updateMasterState = () => {\n    //this.setState({ [attrName]: value });\n    setUsername('');\n    //setPassword('');\n  } */\n  //const [username, setUsername] = useState('');\n  //const [password, setPassword] = useState('');\n  /* constructor(props) {\n    super(props);\n    this.state = {\n      showPass: true,\n      press: false,\n    };\n    this.showPass = this.showPass.bind(this);\n  } */\n\n  /* showPass() {\n    this.state.press === false\n      ? this.setState({showPass: false, press: true})\n      : this.setState({showPass: true, press: false});\n  } */\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <FloatLabelTextInput\n          placeholder={\"name of field\"}\n          value={\"value of field\"}\n         // onFocus={@myFocusFunction}\n         // onBlur={@onBlurFunction}\n        />\n\n      {/* <Text style={GlobalStyles.baseText}>Username</Text>\n      <TextInput\n        style={GlobalStyles.baseInput}\n        autoCapitalize={'none'}\n        returnKeyType={'done'}\n        autoCorrect={false}\n      />\n      <Text style={GlobalStyles.baseText}>Password</Text>\n      <TextInput\n        style={GlobalStyles.baseInput}\n        //secureTextEntry={this.state.showPass}\n        returnKeyType={'done'}\n        autoCapitalize={'none'}\n        autoCorrect={false}\n      /> */}\n      {/* <TouchableOpacity\n        activeOpacity={0.7}\n        style={styles.btnEye}\n      //onPress={this.showPass}\n      >\n         <Image source={eyeImg} style={styles.iconEye} /> \n      </TouchableOpacity> */}\n\n      <View style={GlobalStyles.viewButton}>\n        <Button\n          color={CUSTOMON.COLOR}\n          title=\"Login\"\n          onPress={() => { }}\n        />\n      </View>\n      <Text style={styles.text}>Forgot Password?</Text>\n\n      <View style={GlobalStyles.separator}> Or</View>\n      <View style={GlobalStyles.viewButton}>\n        <Button\n          color={CUSTOMON.COLOR}\n          title=\"Create Account\"\n          onPress={() => { }}\n        />\n      </View>\n\n    </KeyboardAvoidingView>\n  );\n}\n\n\n//const DEVICE_WIDTH = Dimensions.get('window').width;\n//const DEVICE_HEIGHT = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n  container: {\n     flex: 1,\n    //padding: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    //backgroundColor: 'white', \n  },\n  text: {\n    margin: 20\n  },\n  labelInput: {\n    color: '#673AB7',\n  },\n  formInput: {    \n    borderBottomWidth: 1.5, \n    marginLeft: 20,\n    borderColor: '#333',       \n  },\n  input: {\n    borderWidth: 0\n  }\n});\nexport default Form;\n"]}