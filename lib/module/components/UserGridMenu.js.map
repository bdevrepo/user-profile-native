{"version":3,"sources":["UserGridMenu.tsx"],"names":["React","TouchableHighlight","Dimensions","View","FlatList","Text","Image","StyleSheet","useNavigation","DeviceWidth","get","width","list","id","name","appLogo","appUrl","UserGridMenu","onPressFunction","navigation","handlerPress","navigate","styles","container","item","gridRow","logo","uri","appTitle","create","flex","justifyContent","backgroundColor","flexDirection","margin","height","textAlign","marginVertical","fontSize","navigationOptions","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableHighlight, Dimensions, View, FlatList, Text, Image, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst DeviceWidth = Dimensions.get('window').width;\n\nconst list = [\n    {\n        id: 1,\n        name: 'Sua conta',\n        appLogo: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n        appUrl: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg'\n    },\n    {\n        id: 2,\n        name: 'Propriedade intelectual ',\n        appLogo: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n        appUrl: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg'\n    },\n    {\n        id: 3,\n        name: 'bDev Carteira',\n        appLogo: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n        appUrl: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg'\n    },\n];\n\n\ntype GridMenuProps = {\n    onPressFunction:Function\n}\n\nconst UserGridMenu = ({onPressFunction}:GridMenuProps) => {\n    const navigation = useNavigation();\n    const handlerPress =() =>{\n        //console.log('Pressed: ', onPress)\n        // TODO: open page\n        navigation.navigate('AccoundDashboard')\n        onPressFunction();\n    }\n    return (\n        <View style={styles.container}>\n        <FlatList\n            data={list}\n            renderItem={({ item }) => (\n                <TouchableHighlight\n                    activeOpacity={0.6}\n                    underlayColor=\"#DDDDDD\"\n                    onPress={() => handlerPress()}>\n                    <View\n                        style={styles.gridRow}>\n                        <Image\n                            style={styles.logo}\n                            source={{ uri: item.appLogo }}\n                        />\n                        <Text style={styles.appTitle}>{item.name}</Text>\n                    </View>\n                </TouchableHighlight>\n\n            )}\n            //Setting the number of column\n            numColumns={3}\n        //keyExtractor={(item, index) => index}\n        />\n    </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    gridRow: {\n        flex: 1,\n        flexDirection: 'column',\n        margin: 15,\n       // marginBottom: 15\n    },\n    logo: {\n        width: DeviceWidth * 0.1,\n        height: DeviceWidth * 0.1,\n    },\n    appTitle: {\n        textAlign: \"center\",\n        marginVertical: 5,\n        fontSize: 20,\n    },\n});\n\nUserGridMenu.navigationOptions = {\n    title: 'Another Test Screen',\n    \n  };\nexport default UserGridMenu"]}