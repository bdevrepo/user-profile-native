{"version":3,"sources":["User.tsx"],"names":["React","useState","useEffect","View","Text","Picker","CheckBox","FloatingLabelInput","setGlobalStyles","GlobalStyles","idetReqData","User","props","docTypeReq","setDocTypeReq","nameReq","setNameReq","emailReq","setEmailReq","mobileReq","setMobileReq","phoneReq","setPhoneReq","addressReq","setAddressReq","postalCodeReq","setPostalCodeReq","placeReq","setPlaceReq","countryReq","setCountryReq","checkedProprio","setCheckedProprio","checkedEditor","setCheckedEditor","checkedTitular","setCheckedTitular","checkedRepre","setCheckedRepre","user","namecheckedTitularreq","container","titleText","text","parentUser","baseText","baseInput","itemValue","listDocType","map","item","key","label","value","listCountry","flexDirection","margin","alignSelf","checkboxLabel","labelStyles","color","fontSize","inputStyles","borderRadius","minHeight","width","padding","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    Picker,\n    CheckBox\n} from 'react-native';\nimport { FloatingLabelInput, setGlobalStyles } from 'react-native-floating-label-input';\nimport GlobalStyles from './../assets/style/GlobalStyles';\nvar idetReqData = {};\n\nconst User = (props: any) => {\n    const [docTypeReq, setDocTypeReq] = useState(\"CNI\");\n    const [nameReq, setNameReq] = useState('');\n    const [emailReq, setEmailReq] = useState('');\n    const [mobileReq, setMobileReq] = useState('');\n    const [phoneReq, setPhoneReq] = useState('');\n    const [addressReq, setAddressReq] = useState('');\n    const [postalCodeReq, setPostalCodeReq] = useState('');\n    const [placeReq, setPlaceReq] = useState('');\n    const [countryReq, setCountryReq] = useState('');\n\n    const [checkedProprio, setCheckedProprio] = useState(false);\n    const [checkedEditor, setCheckedEditor] = useState(false);\n    const [checkedTitular, setCheckedTitular] = useState(false);\n    const [checkedRepre, setCheckedRepre] = useState(false);\n\n\n    useEffect(() => {\n        const user = {\n            nameReq: '',\n            docTypeReq: '',\n            emailReq: '',\n            mobileReq: '',\n            phoneReq: '',\n            addressReq: '',\n            postalCodeReq: '',\n            placeReq: '',\n            checkedProprio: false,\n            checkedEditor: false,\n            namecheckedTitularreq: false,\n            checkedRepre: false\n        }\n\n        user[\"nameReq\"] = nameReq;\n        user[\"docTypeReq\"] = docTypeReq;\n        user[\"emailReq\"] = emailReq;\n        user[\"mobileReq\"] = mobileReq;\n        user[\"phoneReq\"] = phoneReq;\n        user[\"addressReq\"] = addressReq;\n        user[\"postalCodeReq\"] = postalCodeReq;\n        user[\"placeReq\"] = placeReq;\n\n        // TODO: get value checked\n        user[\"checkedProprio\"] = checkedProprio;\n        user[\"checkedEditor\"] = checkedEditor;\n        user[\"namecheckedTitularreq\"] = checkedTitular;\n        user[\"checkedRepre\"] = checkedRepre;\n\n        idetReqData = user;\n        //console.log(' A editar', idetReqData);\n    });\n    return (\n        <View style={GlobalStyles.container}>\n            <Text style={GlobalStyles.titleText}>Informações pessoais</Text>\n\n            {/* <FloatingLabelInput\n          label={userNameLabel}\n         // value={username}\n          blurOnSubmit={false}\n          maxLength={100}\n          onChangeText={(value: any) => handleUsernaChange(value)}\n        /> */}\n\n            <FloatingLabelInput\n                label='Nome do requerente'\n                onChangeText={text => {\n                    setNameReq(text)\n                    props.parentUser(idetReqData);\n                }}\n            />\n            <Text style={GlobalStyles.baseText}>Documento identificação</Text>\n\n            <Picker\n                style={GlobalStyles.baseInput}\n                selectedValue={docTypeReq}\n                onValueChange={(itemValue) => {\n                    setDocTypeReq(itemValue);\n                    props.parentUser(idetReqData);\n                }}\n            >\n                {props.listDocType.map((item: any, key: any) =>\n                    <Picker.Item key={key} label={item.label} value={item.value} />\n                )}\n            </Picker>\n\n            <FloatingLabelInput\n                label=\"E-mail\"\n                onChangeText={text => { setEmailReq(text); props.parentUser(idetReqData); }}\n            />\n            <FloatingLabelInput\n                label=\"Telefone\"\n                onChangeText={text => { setPhoneReq(text); props.parentUser(idetReqData); }}\n            />\n            <FloatingLabelInput\n                label=\"Telemóvel\"\n                onChangeText={text => { setMobileReq(text); props.parentUser(idetReqData); }}\n            />\n            <FloatingLabelInput\n                label=\"Morada\"\n                onChangeText={text => { setAddressReq(text); props.parentUser(idetReqData); }}\n            />\n            <FloatingLabelInput\n                label=\"Codigo Postal\"\n                onChangeText={text => { setPostalCodeReq(text); props.parentUser(idetReqData); }}\n            />\n            <FloatingLabelInput\n                label=\"Localidade\"\n                onChangeText={text => { setPlaceReq(text); props.parentUser(idetReqData); }}\n            />\n\n            <Text style={GlobalStyles.baseText}>Pais</Text>\n            <Picker\n                style={GlobalStyles.baseInput}\n                selectedValue={countryReq}\n                onValueChange={(itemValue) => { setCountryReq(itemValue); props.parentUser(idetReqData); }}\n            >\n                {props.listCountry.map((item: any, key: any) =>\n                    <Picker.Item key={key} label={item.label} value={item.value} />\n                )}\n            </Picker>\n\n            <View style={{ flexDirection: \"row\", margin: 10, alignSelf: \"center\" }}>\n                <CheckBox\n                    value={checkedProprio}\n                    onValueChange={() => {\n                        checkedProprio ? setCheckedProprio(false) : setCheckedProprio(true);\n                        props.parentUser(idetReqData);\n                    }}\n                />\n                <Text style={GlobalStyles.checkboxLabel}>O Proprio</Text>\n                <CheckBox\n                    value={checkedEditor}\n                    onValueChange={() => {\n                        checkedEditor ? setCheckedEditor(false) : setCheckedEditor(true);\n                        props.parentUser(idetReqData);\n                    }}\n                />\n                <Text style={GlobalStyles.checkboxLabel}>Editor</Text>\n                <CheckBox\n                    value={checkedRepre}\n                    onValueChange={() => {\n                        checkedRepre ? setCheckedRepre(false) : setCheckedRepre(true);\n                        props.parentUser(idetReqData);\n                    }}\n                />\n                <Text style={GlobalStyles.checkboxLabel}>Representante</Text>\n                <CheckBox\n                    value={checkedTitular}\n                    onValueChange={() => {\n                        checkedTitular ? setCheckedTitular(false) : setCheckedTitular(true);\n                        props.parentUser(idetReqData);\n                    }}\n                />\n                <Text style={GlobalStyles.checkboxLabel}>Titular Sucessivo</Text>\n            </View>\n        </View>\n    );\n}\n\nsetGlobalStyles.labelStyles = {\n    color: 'black',\n    fontSize:14,\n    // any styles you want to generalize to your floating label\n};\n\nsetGlobalStyles.inputStyles = {\n    // any styles you want to generalize to your input\n    color: 'black',\n    borderRadius: 5,\n    minHeight: 40,\n    margin: 8,\n    width: 350,\n    padding: 4,\n    fontSize: 14,\n};\n\nUser.defaultProps = {\n    listDocType: [{ label: 'Bilhete de Identidade', value: 'BI' },\n    { label: 'Cartão Nacional de Identificação', value: 'CNI' },\n    { label: 'Passaporte', value: 'Passaporte' },],\n    listCountry: [{ label: 'Angola', value: 'Angola' },\n    { label: 'Cabo Verde', value: 'Cabo Verde' },\n    { label: 'Moçambique', value: 'Moçambique' },\n    { label: 'Holanda', value: 'Holanda' },\n    ]\n};\nexport default User;"]}